# Workflow ka naam, jo GitHub Actions mein dikhai dega
# name: React.js CI

# # Workflow ko trigger karne wale events
# on:
#   push: # Jab code push hoga
#     branches: 
#       - "master"      # Sirf master branch mein push hone par hi workflow chalega
#   pull_request: # Jab pull request banega ya update hoga
#     branches: "master" # Sirf master branch ko target karne wale PR par hi workflow chalega

# # Workflow mein jobs define karna
# jobs:

#   ##############################################################
#   # FRONTEND TEST JOB – React.js frontend ke liye testing
#   ##############################################################
#   frontend-test:
#     runs-on: ubuntu-latest # Job Ubuntu ke latest version par run hoga
#     defaults:
#       run:
#         working-directory: ./quiz-app # Run commands ke liye default working directory set karna
#     strategy:
#       matrix:
#         node-version: [20.x] # Node.js version yaha set kar rahe hain
#         architecture: [x64]  # System architecture 64-bit
#     steps:
#       - name: Check-out git repository  
#         uses: actions/checkout@v4 # GitHub repository ko checkout karne ka action

#       - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
#         uses: actions/setup-node@v4 # Node.js environment setup karne ka action

#       - name: Install project dependencies 
#         working-directory: ./quiz-app # Directory set karna
#         run: |
#           npm i                # Dependencies install karo
#           npm run lint         # Code style lint check karo
#           npm install --save-dev --save-exact prettier # Prettier install karo formatting ke liye
#           npm run prettier    # Code formatting apply karo
#           npm test            # Tests run karo
#         env:
#           CI: true # Continuous integration environment set karo

#       - name: Build
#         run: npm run build   # Application ko build karo
#         working-directory: ./quiz-app

#       - name: Setup SonarQube
#         uses: warchant/setup-sonar-scanner@v8 # Sonar scanner ko setup karne ka action

#       - name: Analyze with SonarCloud
#         uses: sonarsource/sonarcloud-github-action@master # SonarCloud analysis action
#         env:
#           GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }} # GitHub authentication token
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarCloud token
#         with:
#           projectBaseDir: quiz-app # Project directory
#           args: > # Extra sonar arguments
#             -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} # Organization key
#             -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} # Project key
#             -Dsonar.host.url=${{ secrets.SONAR_URL }} # SonarCloud server URL
#             -Dsonar.login=${{ secrets.SONAR_TOKEN }} # Authentication token
#             -Dsonar.sources=src/ # Source files directory
#             -Dsonar.verbose=true # Verbose output enable karna

#   ##############################################################
#   # BACKEND TEST JOB – Node.js backend ke liye testing
#   ##############################################################
#   backend-test:
#     runs-on: ubuntu-latest # Job Ubuntu par run karega
#     defaults:
#       run:
#         working-directory: ./backend # Default working directory
#     strategy:
#       matrix:
#         node-version: [20.x] # Node.js version
#         architecture: [x64] # Architecture
#     steps:
#       - name: Check-out git repository  
#         uses: actions/checkout@v4 # GitHub repository checkout

#       - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
#         uses: actions/setup-node@v4 # Node.js environment setup

#       - name: Install project dependencies 
#         working-directory: ./backend
#         run: |
#           npm i # Dependencies install
#           npm run lint # Linter run
#           npm install --save-dev --save-exact prettier # Prettier install
